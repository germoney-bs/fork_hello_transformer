# 들어가며
2018년을 기점으로 인공지능은 굉장히 빠른 속도로 발전하고 있다.  자연어 처리 분야 역시 굉장히 큰 발전이 있었다. 2018년 10월에 Google에서 BERT를 발표한 이후로부터 빠른 속도로 여러 밴치마크 데이터셋의 SoTA(State-of-The-Art)가 갈아엎어졌다.  이제는 단일 테스크에 대해서는 더이상 "사람처럼 행동하는 AI 모델"을 만드는 것이 예전만큼 신기하게 보여지지 않는다. 

그렇다면 AI는 얼마나 어려워졌을까? 아이러니하게도 "얼마나 쉬워졌을까?"로 질문하는 것이 맞다. AI는 생각보다 어렵지 않다. 물론 아직도 연구할 내용이 많이 있고, 더 공부해야 할 내용들이 산더미처럼 쌓여 있다. 하지만 너무나도 어려운 영역이여서 최소한 석사 과정 이상을 진학하지 않고서야 접근할 수 없는 그런 미지의 영역은 아니다. 다행스럽게도 너무 어렵지 않게 AI를 공부할 수 있는 여러가지 방법이 있다. Tensorflow나 Pytorch도 AI에 대한 접근성을 많이 낮췄고, Python이라는 하이레벨(high-level) 언어 역시 접근성을 낮추데 큰 역할을 했다.

2018년 이후부터 자연어 처리는 매우 쉬워졌다. 쉬워졌다는 것은 접근성이 낮아졌다는 뜻이다. 아직 사람처럼 기계는 말하지 못한다. 사람처럼 콩떡같이 말해도 찰떡같이 알아듣지 못한다. 단순히 문장만 사람이 만든 문장처럼 만들어 낼 수 있는 정도이기 때문에 지식을 습득해서 그 지식을 기존에 이미 알고 있는 정보와 연관관계까지 알아내서 말할 수 있는 사람과는 비교할 수도 없다. 하지만 단일 테스크를 수행하는 모델을 만드는 정도의 AI라면 정말 많이 쉬워졌다고 말할 수 있다.

이 책은 2018년 이후의 자연어 처리를 다루기 위해서 쓰기 시작했다. 처음 1장부터 3장까지는 2018년 이전의 기술들 또는 AI 모델 구조를 설명했다. 4장부터 6장까지는 2018년 이후에 자연어 처리의 한 획을 그은 모델들에 대해서 설명해보려고 한다. 

# 이 책에서 다루는 내용
2장: 언어 모델에 대해서 다룬다. 전통적인 언어 모델인 N-Gram에 대해서 다룬다. 확률에 관련된 내용들이 수식을 통해 등장하지만 크게 어려운 수준의 확률이 아니기 때문에 크게 걱정하지 않아도 된다. 
3장: RNN과 어탠션 네트워크에 대해서 설명했다. 어탠션에 대해서 자세하게 설명했으며 RNN과 어탠션을 조합해서 ABC와 같은 문자열을 CBA와 같이 거꾸로 뒤집는 장난감 모델을 만들어볼 수 있다.
4장: 트랜스포머에 대해서 공부한다. 트랜스포머 모델의 구조를 자세하게 알아볼 예정이다. 
5장: BERT와 BERT 이후에 발표된 언어 모델에 대해서 공부해본다. BERT를 공부할 때는 모델의 구조에 대해서도 자세하게 다룬다. BERT 이후의 모델에 대해서 공부할 때는 모델의 구조보다는 어떤 식으로 변화를 줬는지에 대해서 공부할 예정이다. 또한 사전학습(Pre-training)과 파인튜닝(Fine-tuning)에 대해서 공부한다.
6장: 자연어 처리에서의 메타러닝을 공부해본다. 소스코드를 통해서 Few-shot 러닝을 공부할 예정이고, 그것을 바탕으로 GPT2/GPT3에 대해서도 공부할 것이다.

# 준비 사항
데스크탑 또는 노트북을 통해 이 책의 소스코드를 실행시킬 수 있다. GPU는 반드시 필요하지 않도록 구현했다. 일부 학습을 위한 소스코드 역시 옵션을 통해서 GPU를 사용하지 않게 세팅할 수 있도록 구현했다. 이 책의 소스코드를 이용해서 특정 모델을 실제로 학습하려면 GPU가 필요하겠지만 학습을 목적으로 모델 입출력의 내용을 알아보거나 shape을 출력해보는 정도는 CPU로도 충분히 할 수 있다.

# 대상 독자
파이선을 이용한 기본적인 코딩 능력과 인공지능에 대한 기본적인 지식이 있는 독자들을 대상으로 작성했다. 특히 자연어 처리를 공부하는 학생이나 현업에서 자연어 처리를 연구하는 개발자들에게 큰 도움이 되길 바란다.

# 편집 규약
이 책에서 소스 코드는 다음과 같이 표기한다.

<코드 시작>
a = [1, 2, 3]
b = [4, 5, 6]
<코드 끝>

명령행의 입력/출력 또는 인용 등등은 다음과 같이 표기한다.

<블록 시작>
# 명령행
$ ls -al 


# 인용
가나다라마바사
<블록 끝>

# 독자 의견

# 고객 지원

# 예제 코드 다운로드
이 책에서 나오는 모든 소스코드는 [링크]에서 다운로드 받을 수 있다. 레포지토리에서 requirements.txt에 필요한 필수 패키지를 정리해놨다. 가상환경을 생성한 후에 pip을 통해서 requirements.txt의 패키지를 설치해보자.

<블록 시작>
# env_book 가상환경 생성하기
$ virtualenv -p /usr/bin/python3.6 env_book

# env_book 가상환경 실행하기
$ source env_book/bin/activate

# env_book 가상환경에 requirements.txt에 리스트한 패키지 설치하기
(env_book)$ pip install -r requirements.txt
<블록 끝>

# 정오표

# 질문

